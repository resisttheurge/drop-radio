name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # Cache node_modules
      - name: Setup Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npm ci --legacy-peer-deps

      - name: Build the server application
        run: npx nx build server

      - name: Generate docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/resisttheurge/drop-radio-server
          # generate Docker tags based on the following events/attributes
          tags: |
            latest
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: apps/server
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Authenticate to Google Cloud Compute
        id: auth-compute
        uses: google-github-actions/auth@v2
        with:
          project_id: drop-radio
          service_account: ${{ vars.compute_service_account }}
          workload_identity_provider: ${{vars.workload_identity_provider}}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Set VM startup script
        run: >
          gcloud compute instances add-metadata ${{ vars.instance_name }} \
          --zone ${{ vars.compute_zone }} \
          --metadata=startup-script='
          #!/bin/bash
          # mount drop-audio disk
          fsck.ext4 -tvy /dev/disk/by-id/google-${{ vars.drop_audio_disk }}
          mkdir -p /mnt/disks/drop-audio
          mount -o discard,defaults /dev/disk/by-id/google-${{ vars.drop_audio_disk }} /mnt/disks/drop-audio
          chmod a+w /mnt/disks/drop-audio

          # pull gcloud image and sync audio files to disk
          docker pull gcr.io/google.com/cloudsdktool/google-cloud-cli:489.0.0-stable
          docker run --rm gcr.io/google.com/cloudsdktool/google-cloud-cli:489.0.0-stable \
            gcloud storage rsync gs://${{ vars.audio_bucket }} /mnt/disks/drop-audio \
            --recursive --delete-unmatched-destination-objects
          '

      - name: Update Google Compute Engine instance
        run: >
          gcloud compute instances update-container ${{ vars.instance_name }} \
          --zone ${{ vars.compute_zone }} \
          --container-image ghcr.io/resisttheurge/drop-radio-server:latest \
          --container-mount-host-path mount-path=/app/input,host-path=/mnt/disks/drop-audio,mode=ro
